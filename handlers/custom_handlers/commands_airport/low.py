import re
import time
from loguru import logger
from keyboards.inline.keyboard_all_command import name_all_commands
from loader import bot
from telebot.types import Message
from database.common.models import db, Airports
from database.core import crud
from handlers.custom_handlers.commands_airport.low_loader import site_api, headers, params, url
from states.states2low import UserStates
from keyboards.inline.keyboard2airports_count import ip_address_site, count_airport
from utils.misc.validate_api_data import validate_api_data

db_write = crud.record_data

logger.add("logs/logs_low.log", level="ERROR", format="{time} {level} {message}", rotation="500 MB", compression="zip")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback /low –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
@logger.catch
@bot.callback_query_handler(func=lambda call: call.data == "/low")
def callback_low(call) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –ø–æ ip –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.ip_user

    Parameters:
        call: –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ callback –∑–∞–ø—Ä–æ—Å–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None
	"""
	# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å callback low".format(user=call.from_user.first_name))
	bot.set_state(call.from_user.id, UserStates.ip_user, call.message.chat.id)
	logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ ip_user".format(user=call.from_user.first_name))

	# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	good_mess = "–ü—Ä–∏–≤–µ—Ç! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å! üòä\n" \
	            "–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∞—ç—Ä–æ–ø–æ—Ä—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ IP-–∞–¥—Ä–µ—Å–∞. \n" \
	            "\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å - –º—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –≤–∞—à IP-–∞–¥—Ä–µ—Å –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –≤ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥—Ä—É–≥–∏—Ö —Ü–µ–ª—è—Ö, " \
	            "–∫—Ä–æ–º–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–∏–∂–∞–π—à–µ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç–µ. –í–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –Ω–∞—Å –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã.</b>\n" \
	            "\n{}, <b>–≤–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–π ip</b>".format(call.from_user.first_name)
	bot.send_message(call.from_user.id, good_mess, parse_mode="HTML")
	bot.send_message(call.from_user.id, text="–£–∑–Ω–∞—Ç—å —Å–≤–æ–π ip –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É", reply_markup=ip_address_site())
	picture_example_ip = open("utils/misc/pictures/you_ip.png", "rb")
	bot.send_photo(call.message.chat.id, picture_example_ip)
	logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º ip –∞–¥—Ä–µ—Å–∞ –∏ –ø—Ä–∏–º–µ—Ä–æ–º ip".format(user=call.from_user.first_name))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /low
@logger.catch
@bot.message_handler(commands=["low"])
def command_low(message: Message) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –ø–æ ip –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.ip_user

    Parameters:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None
	"""

	# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å command low".format(user=message.from_user.first_name))
	bot.set_state(message.from_user.id, UserStates.ip_user, message.chat.id)
	logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ ip_user".format(user=message.from_user.first_name))

	# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	good_mess = "–ü—Ä–∏–≤–µ—Ç! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å! üòä\n" \
	            "–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∞—ç—Ä–æ–ø–æ—Ä—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ IP-–∞–¥—Ä–µ—Å–∞. \n" \
	            "\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å - –º—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –≤–∞—à IP-–∞–¥—Ä–µ—Å –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –≤ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥—Ä—É–≥–∏—Ö —Ü–µ–ª—è—Ö, " \
	            "–∫—Ä–æ–º–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–∏–∂–∞–π—à–µ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç–µ. –í–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –Ω–∞—Å –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã.</b>\n" \
	            "\n{}, <b>–≤–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–π ip</b>".format(message.from_user.first_name)
	bot.send_message(message.from_user.id, good_mess, parse_mode="HTML")
	bot.send_message(message.from_user.id, text="–£–∑–Ω–∞—Ç—å —Å–≤–æ–π ip –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É", reply_markup=ip_address_site())
	picture_example_ip = open("utils/misc/pictures/you_ip.png", "rb")
	bot.send_photo(message.chat.id, picture_example_ip)
	logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º ip –∞–¥—Ä–µ—Å–∞ –∏ –ø—Ä–∏–º–µ—Ä–æ–º ip".format(user=message.from_user.first_name))


@logger.catch
@bot.message_handler(state=UserStates.ip_user)
def get_ip_user(message: Message) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ip –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å—å—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
	–ò –∑–∞–ø—Ä–æ—Å –∫–æ–ª-–≤–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤.
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.count_airport

    Parameters:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None
	"""

	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ip
	pattern_search_ip = r"([0-9]{1,3}[\.]){3}[0-9]{1,3}"
	if re.search(pattern_search_ip, message.text):
		# –ü–æ–ª—É—á–µ–Ω–∏–µ ip –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		search_user_ip = re.search(pattern_search_ip, message.text)
		result_user_ip = search_user_ip.group()
		logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤–≤–µ–ª ip: {ip}".format(user=message.from_user.first_name, ip=result_user_ip))

		# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		bot.set_state(message.from_user.id, UserStates.count_airport2low, message.chat.id)
		logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ count_airport".format(user=message.from_user.first_name))
		good_mess = "–û—Ç–ª–∏—á–Ω–æ, –∑–∞–ø–∏—Å–∞–ªüëåüèº. \n<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤</b>"

		# –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª-–≤–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
		keyboard_count_airport = count_airport()
		bot.send_message(message.from_user.id, good_mess, reply_markup=keyboard_count_airport, parse_mode="HTML")
		logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–ª-–≤–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤".format(user=message.from_user.first_name))

		try:
			# –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
			with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
				data["ip_user"] = result_user_ip
				logger.info("–î–∞–Ω–Ω—ã–µ –æ–± ip –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö")

		except Exception as ex:
			logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:")
			logger.exception(ex)
			# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ
			error_mess = "–£–ø—Å... —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
			bot.send_message(message.from_user.id, error_mess)
			logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö".format(user=message.from_user.first_name))

	else:
		# –ï—Å–ª–∏ ip –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π
		bad_mess = "{} —ç—Ç–æ –Ω–µ ip\n" \
		           "–í–≤–µ–¥–∏—Ç–µ ip –∞–¥—Ä–µ—Å\n" \
		           "–ø—Ä–∏–º.: <u>111.222.333.444</u>".format(message.from_user.first_name)
		bot.send_message(message.from_user.id, bad_mess, parse_mode="HTML")
		logger.warning("–í–≤–µ–¥—ë–Ω –Ω–µ ip, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π")


@logger.catch
@bot.callback_query_handler(func=lambda call:call, state=UserStates.count_airport2low)
def handler_keyboard_click_and_get_count_airport(call) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å—å—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
	–ò –∑–∞–ø—Ä–æ—Å —Ä–∞–¥–∏—É—Å–∞ –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤.
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.search_radius

    Parameters:
        call: –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ callback –∑–∞–ø—Ä–æ—Å–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None
	"""

	# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
	count = call.data

	# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–¥–∏—É—Å–∞ –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
	logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤—ã–±—Ä–∞–ª –∫–æ–ª-–≤–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤: {count}".format(user=call.from_user.first_name, count=count))
	bot.set_state(call.from_user.id, UserStates.search_radius, call.message.chat.id)
	logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ search_radius".format(user=call.from_user.first_name))
	good_mess = "–ú—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. \n" \
	            "\n–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Ç–æ—á–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –∫ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é, <b>–≤–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ " \
	            "(–≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö)</b>:".format(user=call.from_user.first_name, )
	bot.send_message(call.message.chat.id, good_mess, parse_mode="HTML")
	logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º —Ä–∞–¥–∏—É—Å–∞ –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤".format(user=call.from_user.first_name))

	try:
		# –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
		with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
			data["count_airport"] = count
			logger.info("–î–∞–Ω–Ω—ã–µ –æ –∫–æ–ª-–≤–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã")

	except Exception as ex:
		logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:")
		logger.exception(ex)
		# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		error_mess = "–£–ø—Å... —É –Ω–∞—Å —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
		bot.send_message(call.from_user.id, error_mess)
		logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö".format(user=call.from_user.first_name))


@logger.catch
@bot.message_handler(state=UserStates.search_radius)
def get_search_radius(message: Message) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–¥–∏—É—Å–∞ –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å—å—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
	–ò –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã.

    Parameters:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None
	"""

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∏—Å–ª–æ–º
	if message.text.isdigit():
		logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤–≤–µ–ª —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤: {radius}".format(user=message.from_user.first_name,
		                                                                                 radius=message.text))
		try:
			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
			with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
				data["search_radius"] = message.text
				logger.info("–î–∞–Ω–Ω—ã–µ –æ —Ä–∞–¥–∏—É—Å–µ –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã")

				good_mess = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! \n" \
				            "–ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ —Å–æ–±–∏—Ä–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–∏–∂–∞–π—à–∏—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞—Ö."
				bot.send_message(message.from_user.id, good_mess)
				logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–æ–º –ø–æ–∏—Å–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤".format(
						user=message.from_user.first_name))

				# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö
				user_ip = data["ip_user"]
				user_count_search_airport = data["count_airport"]
				user_radius_search_airport = data["search_radius"]
				logger.debug("–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö: {ip}, {count}, {radius}".format(ip=user_ip,
				                                                                                 count=user_count_search_airport,
				                                                                                 radius=user_radius_search_airport))

				# –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
				search_airports_by_ip_address_geolocation = site_api.airports_ip(method="GET", url=url, headers=headers,
				                                                                 params=params, ip_user=user_ip,
				                                                                 radius_km=user_radius_search_airport,
				                                                                 limit_search_airport=user_count_search_airport)

				# –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
				response_json = search_airports_by_ip_address_geolocation.json()
				logger.debug("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response}".format(response=response_json, ))

				# –ü–æ–ª—É—á–∞–µ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞
				result_mess = response_json.get("items")

				# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
				response_dict = result_mess[0]
				logger.debug("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç API –∏–∑ —Å–ø–∏—Å–∫–∞: {data}".format(data=response_dict))

				# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
				if validate_api_data(response_dict):
					logger.debug("–ü–æ–ª—É—á–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")

					# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
					information2db = []

					# –û–±—Ä–æ–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
					# –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
					for item in result_mess:
						iata = item.get("iata")
						full_airport_addressname = item.get("name")

						# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–ª—é—á–∞ location
						if isinstance(item.get("location"), dict):
							lat = item.get("location").get("lat")
							lon = item.get("location").get("lon")

						mess = "<b>–ö–æ–¥:</b> {code_airport}\n" \
						       "<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {short_name}\n" \
						       "<b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b>  https://maps.google.com/?q={lat},{lon}".format(code_airport=iata,
						                                  short_name=full_airport_addressname,
						                                  lat=lat,
						                                  lon=lon,)
						logger.debug("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {mess}".format(mess=mess))

						# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –≤ —Å–ª–æ–≤–∞—Ä—å
						# —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î –≤—Å–µ—Ö –∞—ç—Ä–æ–ø—Ä–æ—Ç–æ–≤
						airport_info = {"command_name": "/low",
								"user_id":message.from_user.id,
								"user_name":message.from_user.username,
								"full_airport_address":full_airport_addressname,
								"iata":iata,
								"location_lat":lat,
								"location_lon":lon,}
						logger.debug("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—ç—Ä–æ–ø—Ä—Ç–µ –∑–∞–ø–∏—Å–∞–ª–∞—Å—å –≤ —Å–ª–æ–≤–∞—Ä—å")

						# –î–æ–±–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
						information2db.append(airport_info)
						logger.debug("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—ç—Ä–æ–ø—Ä—Ç–µ –∑–∞–ø–∏—Å–∞–ª–∞—Å—å –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î")

						bot.send_message(message.from_user.id, mess, parse_mode="HTML")
						time.sleep(1)
						logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞.".format(
							user=message.from_user.first_name,))
				else:
					logger.debug("–ü–æ–ª—É—á–µ–Ω –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
					bot.send_message(message.from_user.id, "–£ –Ω–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞–±–æ—Ç–æ–π —Å–µ—Ä–≤–∏—Å–∞.\n"
					                                       "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–∑–¥–Ω–µ–µ.")
					logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.".format(user=message.from_user.first_name,))

		except Exception as ex:
			logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∏ –≤—ã–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö:")
			logger.exception(ex)
			# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			exc_mess = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. \n" \
			           "<b>–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –≤–∞–º —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.</b>" \
			           "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞."
			bot.send_message(message.from_user.id, exc_mess, parse_mode="HTML")

		try:
			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
			db_write(db, Airports, information2db)
			logger.info("–î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ë–î")

		except Exception as ex:
			logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î:")
			logger.exception(ex)

		# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
		main_keyboard = name_all_commands()
		bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=main_keyboard)
		logger.debug("–°–æ–∑–¥–∞–ª–∞—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")

		# –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		bot.delete_state(message.from_user.id, message.chat.id)
		logger.debug("–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ")
		logger.warning("–ö–æ–Ω–µ—Ü —Å—Ü–µ–Ω–∞—Ä–∏—è /low")

	else:
		logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ")
		bad_mess = "{user} –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.".format(user=message.from_user.first_name)
		bot.send_message(message.from_user.id, bad_mess)
		logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.".format(user=message.from_user.first_name,))
