import time
from loguru import logger
from keyboards.inline.keyboard_all_command import name_all_commands
from loader import bot
from telebot.types import Message
from database.common.models import db, Airports
from database.core import crud
from handlers.custom_handlers.commands_airport.high_loader import site_api, headers, params, url
from states.states2high import UserStates
from keyboards.inline.keyboard2airports_count import count_airport
from utils.misc.validate_api_data import validate_api_data

db_write = crud.record_data

logger.add("logs/logs_high.log", level="ERROR", format="{time} {level} {message}", rotation="500 MB", compression="zip")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback /high –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
@logger.catch()
@bot.callback_query_handler(func=lambda call: call.data == "/high")
def callback_high(call) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –≤ –≥–æ—Ä–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.search_city

    Parameters:
        call: –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ callback –∑–∞–ø—Ä–æ—Å–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None

	"""
	# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å callback high".format(user=call.from_user.first_name))
	bot.set_state(call.from_user.id, UserStates.search_city, call.message.chat.id)
	logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ search_city".format(user=call.from_user.first_name))
	good_mess = "–ü—Ä–∏–≤–µ—Ç {user}! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –≤ –≥–æ—Ä–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–±–µ—Ä–µ—à—å.\n " \
	            "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç.\n" \
	            "–ò–ª–∏ –∫–æ–¥ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ (–ø—Ä–∏–º–µ—Ä: DME), </b>".format(user=call.from_user.first_name)
	bot.send_message(call.message.chat.id, good_mess, parse_mode="HTML")
	logger.info("{user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º".format(user=call.from_user.first_name))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /high
@logger.catch()
@bot.message_handler(commands=["high"])
def command_high(message: Message) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –≤ –≥–æ—Ä–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.search_city

    Parameters:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None

	"""
	# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å command high".format(user=message.from_user.first_name))
	bot.set_state(message.from_user.id, UserStates.search_city, message.chat.id)
	logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ search_city".format(user=message.from_user.first_name))
	good_mess = "–ü—Ä–∏–≤–µ—Ç {user}! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –≤ –≥–æ—Ä–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–±–µ—Ä–µ—à—å.\n " \
	            "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç.\n" \
	            "–ò–ª–∏ –∫–æ–¥ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ (–ø—Ä–∏–º–µ—Ä: DME), </b>".format(user=message.from_user.first_name)
	bot.send_message(message.chat.id, good_mess, parse_mode="HTML")
	logger.info("{user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º".format(user=message.from_user.first_name))


@logger.catch
@bot.message_handler(state=UserStates.search_city)
def get_city_name(message: Message) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	–ò –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ UserInfoState.count_airport

    Parameters:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None

	"""

	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏
	if len(message.text) >= 3:
		logger.info("–í–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É".format(user=message.from_user.first_name, ))

		# –ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		bot.set_state(message.from_user.id, UserStates.count_airport2high, message.chat.id)
		logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ count_airport".format(user=message.from_user.first_name))

		good_mess = "–û—Ç–ª–∏—á–Ω–æ, –∑–∞–ø–∏—Å–∞–ªüëåüèº. \n<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞</b>"

		# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–ª-–≤–æ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
		keyboard_count_airport = count_airport()
		bot.send_message(message.chat.id, good_mess, reply_markup=keyboard_count_airport, parse_mode="HTML")
		logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–ª-–≤–æ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤".format(user=message.from_user.first_name))

		try:
			# –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
			with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
				data["search_city"] = message.text
				logger.info("–ó–∞–ø–∏—Å–∞–ª–∏—Å—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: {city}".format(city=message.text))

		except Exception as ex:
			logger.error("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:")
			logger.exception(ex)

	# –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ < 3, —Ç–æ –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –µ—â–µ —Ä–∞–∑
	else:
		bad_mess = "<b>–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤</b>.\n" \
		           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –µ—â–µ —Ä–∞–∑."
		bot.send_message(message.chat.id, bad_mess, parse_mode="HTML")
		logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤–≤–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª–∏–Ω–æ–π < 3 —Å–∏–º–≤–æ–ª–æ–≤".format(
				user=message.from_user.first_name))


@logger.catch
@bot.callback_query_handler(func=lambda call:call, state=UserStates.count_airport2high)
def keyboard_click_and_get_count_airport(call) -> None:
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª-–≤–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
	C –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å—å—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.


    Parameters:
        call: –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ callback –∑–∞–ø—Ä–æ—Å–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        None

	"""

	logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤—ã–±—Ä–∞–ª –∫–æ–ª-–≤–æ: {count_airport}".format(user=call.from_user.first_name,
			count_airport=call.data, ))

	# –ó–∞–ø–∏—Å—å –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö
	try:
		with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
			# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö
			user_search_city = data["search_city"]
			user_count_airport = call.data
			logger.debug("–ü–æ–ª—É—á–∏–ª–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã–µ: {city}, {count_airport}".format(city=user_search_city,
			                                                                            count_airport=user_count_airport, ))

			# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			good_mess = "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ."
			bot.answer_callback_query(call.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ {count_airport}".format(count_airport=call.data, ))
			bot.send_message(call.message.chat.id, good_mess)
			logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è".format(user=call.from_user.first_name, ))

			# –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
			time.sleep(1)

			try:
				# –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
				search_airports_by_free_text = site_api.airports_text(method="GET", url=url, headers=headers, params=params,
				                                                      city_search=user_search_city,
				                                                      limit_search_airport=user_count_airport, )
				response_json = search_airports_by_free_text.json()
				logger.debug("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response}".format(response=response_json, ))

				result_mess = response_json.get("items")
				logger.debug("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–ª—é—á—É items: {data}".format(data=result_mess, ))

				# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
				response_dict = result_mess[0]
				logger.debug("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç API –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä—å: {data}".format(data=response_dict))

				# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
				if validate_api_data(response_dict):
					information2db = []

					# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
					# –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
					for item in result_mess:
						iata = item.get("iata")
						full_airport_address_name = item.get("name")

						# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–ª—é—á–∞ location
						if isinstance(item.get("location"), dict):
							lat = item.get("location").get("lat")
							lon = item.get("location").get("lon")

						mess = "<b>–ö–æ–¥:</b> {code_airport}\n" \
						       "<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {short_name}\n" \
						       "<b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b>  https://maps.google.com/?q={lat},{lon}".format(code_airport=iata,
						                                                                               short_name=full_airport_address_name,
						                                                                               lat=lat, lon=lon, )

						# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –≤ —Å–ª–æ–≤–∞—Ä—å
						# —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î –≤—Å–µ—Ö –∞—ç—Ä–æ–ø—Ä–æ—Ç–æ–≤
						airport_info = {"command_name": "/high",
								"user_id":call.from_user.id,
								"user_name":call.from_user.username,
								"full_airport_address":full_airport_address_name,
								"iata":iata,
								"location_lat":lat,
								"location_lon":lon, }
						logger.debug("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–¥–Ω–æ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç–µ –∑–∞–ø–∏—Å–∞–ª–∞—Å—å")

						# –î–æ–±–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
						information2db.append(airport_info)
						logger.debug("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞–ø–∏—Å–∞–ª–∞—Å—å –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î")

						bot.send_message(call.from_user.id, mess, parse_mode="HTML")
						logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã.".format(user=call.from_user.first_name, ))

			except Exception as ex:
				logger.error("–û—à–∏–±–∫–∞! –ø–æ–ª—É—á–µ–Ω –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
				logger.exception(ex)
				# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
				bot.send_message(call.from_user.id, "–û—à–∏–±–∫–∞: –ü–æ–ª—É—á–µ–Ω –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.\n"
				                                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

	except Exception as ex:
		logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∏ –≤—ã–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö:")
		logger.exception(ex)
		# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		exc_mess = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. \n" \
		           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É --> /high"
		bot.send_message(call.from_user.id, exc_mess)
		logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {mess}".format(mess=exc_mess, ))

	try:
		# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
		db_write(db, Airports, information2db)
		logger.info("–î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ë–î")

	except Exception as ex:
		logger.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î:")
		logger.exception(ex)

	finally:
		# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
		main_keyboard = name_all_commands()
		bot.send_message(call.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=main_keyboard)
		logger.debug("–°–æ–∑–¥–∞–ª–∞—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")

		# –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		bot.delete_state(call.from_user.id, call.message.chat.id)
		logger.debug("–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ")
		logger.warning("–ö–æ–Ω–µ—Ü —Å—Ü–µ–Ω–∞—Ä–∏—è /high")
